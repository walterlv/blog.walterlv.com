@page "/"
@page "/blog/{pageNumber}"

@using System.Net
@using System.Net.Http
@using System.Globalization
@using Walterlv.Blog.Data
@inject PostGenerator PostGenerator
@inject SiteAnalytics Analytics

@if (postBriefList == null)
{
    <p><em>正在下载博客列表...</em></p>
}
else
{
    <Announcement></Announcement>

    <div class="post-list">
        <ul>
            @foreach (var postBrief in postBriefList)
            {
                <li>
                    <a href="@($"/post/{@postBrief.Id}")">
                        <h3>@postBrief.Title</h3>
                        <time itemprop="dateUpdated" datetime="@postBrief.UpdateTime" class="date tag">
                            @postBrief.UpdateTime.ToLocalTime().ToString("yyyy年M月d日 HH:mm", CultureInfo.CurrentCulture)
                        </time>
                        <div>@postBrief.Summary</div>
                    </a>
                </li>
            }
        </ul>
    </div>
    <div class="post-pager">
        <ul>
            @for (var i = 1; i <= pageCount; i++)
            {
                <li>
                    <a class="post-pager-link" href="@($"/blog/page{i}")">
                        @i
                    </a>
                </li>
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public string pageNumber { get; set; }

    private PostBrief[] postBriefList;
    private int pageCount;

    protected override void OnInitialized()
    {
        Analytics.Handle(
            pageNumber != null ? $"/blog/page{pageNumber}" : "/",
            pageNumber != null ? $"博客第 {pageNumber} 页" : "首页");

        var number = 0;
        if (pageNumber != null)
        {
            var value = pageNumber.StartsWith("page", StringComparison.OrdinalIgnoreCase)
                ? pageNumber.Substring(4)
                : "";
            int.TryParse(value, out var result);
            number = result - 1;
        }
        var posts = PostGenerator.GetAll();
        pageCount = posts.Count / 30 + 1;
        postBriefList = posts.Skip(number * 30).Take(30).ToArray();
    }
}
